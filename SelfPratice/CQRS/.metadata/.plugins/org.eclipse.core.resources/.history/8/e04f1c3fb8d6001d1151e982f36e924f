package com.cg.bankapp.command.aggregate;

import org.axonframework.commandhandling.CommandHandler;
import org.axonframework.eventsourcing.EventSourcingHandler;
import org.axonframework.modelling.command.AggregateIdentifier;
import org.axonframework.modelling.command.AggregateLifecycle;
import org.axonframework.spring.stereotype.Aggregate;
import org.springframework.beans.BeanUtils;

import com.cg.bankapp.command.AccountCreateCommand;
import com.cg.bankapp.command.AccountUpdateCommand;
import com.cg.bankapp.command.events.AccountCreateEvent;
import com.cg.bankapp.command.events.AccountUpdateEvent;

@Aggregate
public class AccountAggregate {

	@AggregateIdentifier
	private String uid;
	private int accountNo;
	private double balance;
	private int customerId;
	
	@CommandHandler
	public void accountCreateCommandHandler(AccountCreateCommand accountCommand) {
		AccountCreateEvent accountCreateEvent = new AccountCreateEvent();
		BeanUtils.copyProperties(accountCommand, accountCreateEvent);
		AggregateLifecycle.apply(accountCreateEvent);
	}
	
	@CommandHandler
	public void accountUpdateCommandHandler(AccountUpdateCommand command) {
		AccountUpdateEvent event = new AccountUpdateEvent();
		
		
	}
	
	@EventSourcingHandler
	public void accountCreateEventSourcingHandler(AccountCreateEvent accountCreateEvent) {
		this.accountNo=accountCreateEvent.getAccountNo();
		this.uid=accountCreateEvent.getUid();
		this.balance=accountCreateEvent.getBalance();
		this.customerId=accountCreateEvent.getCustomerId();
	}
}
