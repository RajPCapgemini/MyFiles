package com.cg.bankapp.command.controller;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cg.bankapp.command.entities.Account;
import com.cg.bankapp.command.service.AccountCommandService;
import com.cg.bankapp.dtos.AccountDTO;
import com.cg.bankapp.dtos.TransactionDTO;

@RestController
public class AccountCommnadController {
	
	@Autowired
	private AccountCommandService service;
	
	@PostMapping(value="/addAccountDetails",consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<AccountDTO> addAccountDetails(@RequestBody AccountDTO accountDTO){
		Account account = new Account();
		BeanUtils.copyProperties(accountDTO, account);
		AccountDTO responseAccountDTO = new AccountDTO();
		BeanUtils.copyProperties(service.addAccountDetails(account), responseAccountDTO);
		return new ResponseEntity<AccountDTO>(responseAccountDTO,HttpStatus.OK);
	}
	
	@PostMapping(value="/withdrawAmount",consumes=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<AccountDTO> withdrawAmount(@RequestBody TransactionDTO request){
		AccountDTO response = new AccountDTO();
		BeanUtils.copyProperties(service.withdrawAmount(request.getAccountNo(), request.getTransactionAmount()), response) ;
		return new ResponseEntity<AccountDTO>(response,HttpStatus.OK);
	}
	
	@PostMapping(value="/depositAmount",consumes=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<AccountDTO> depositAmount(@RequestBody TransactionDTO request){
		AccountDTO response = new AccountDTO();
		BeanUtils.copyProperties(service.withdrawAmount(request.getAccountNo(), request.getTransactionAmount()), response) ;
		return new ResponseEntity<AccountDTO>(response,HttpStatus.OK);
	}
	
}
